## Simple IP scanner in Python, requires scapy:
"pip install scapy"

## Script itself
from scapy.all import ARP, Ether, srp
import socket

def get_local_ip():
    """Retrieve the local IP address of the device."""
    hostname = socket.gethostname()
    local_ip = socket.gethostbyname(hostname)
    return local_ip

def scan_network(network_range):
    # Create an ARP request packet
    arp = ARP(pdst=network_range)
    ether = Ether(dst="ff:ff:ff:ff:ff:ff")
    packet = ether / arp

    # Send the packet and capture responses
    result = srp(packet, timeout=3, verbose=0)[0]

    # Extract active IPs and MACs from the responses
    devices = []
    for sent, received in result:
        devices.append({'ip': received.psrc, 'mac': received.hwsrc})

    return devices

if __name__ == "__main__":
    # Adjust this to match your network range (e.g., "192.168.1.1/24")
    local_ip = get_local_ip()
    network = '.'.join(local_ip.split('.')[:3]) + '.1/24'

    print(f"Scanning the network: {network}")

    devices = scan_network(network)
    
    print("\nActive devices in the network:")
    for device in devices:
        print(f"IP: {device['ip']}, MAC: {device['mac']}")
